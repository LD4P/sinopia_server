/**
 * Sinopia Server
 * Sinopia Server. Supports CRUD, following loosely LDP, on Sinopia resources. Top level requires special authorization for creating a group's graph (i.e. PCC, Stanford, etc.).
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SinopiaServer);
  }
}(this, function(expect, SinopiaServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SinopiaServer.LDPApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LDPApi', function() {
    describe('groupIDDelete', function() {
      it('should call groupIDDelete successfully', function(done) {
        //uncomment below and update the code to test groupIDDelete
        //instance.groupIDDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupIDHead', function() {
      it('should call groupIDHead successfully', function(done) {
        //uncomment below and update the code to test groupIDHead
        //instance.groupIDHead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupIDOptions', function() {
      it('should call groupIDOptions successfully', function(done) {
        //uncomment below and update the code to test groupIDOptions
        //instance.groupIDOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupIDPatch', function() {
      it('should call groupIDPatch successfully', function(done) {
        //uncomment below and update the code to test groupIDPatch
        //instance.groupIDPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupIDPost', function() {
      it('should call groupIDPost successfully', function(done) {
        //uncomment below and update the code to test groupIDPost
        //instance.groupIDPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupIDPut', function() {
      it('should call groupIDPut successfully', function(done) {
        //uncomment below and update the code to test groupIDPut
        //instance.groupIDPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesDelete', function() {
      it('should call resourcesDelete successfully', function(done) {
        //uncomment below and update the code to test resourcesDelete
        //instance.resourcesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesHead', function() {
      it('should call resourcesHead successfully', function(done) {
        //uncomment below and update the code to test resourcesHead
        //instance.resourcesHead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesOptions', function() {
      it('should call resourcesOptions successfully', function(done) {
        //uncomment below and update the code to test resourcesOptions
        //instance.resourcesOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesPatch', function() {
      it('should call resourcesPatch successfully', function(done) {
        //uncomment below and update the code to test resourcesPatch
        //instance.resourcesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesPost', function() {
      it('should call resourcesPost successfully', function(done) {
        //uncomment below and update the code to test resourcesPost
        //instance.resourcesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesPut', function() {
      it('should call resourcesPut successfully', function(done) {
        //uncomment below and update the code to test resourcesPut
        //instance.resourcesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
