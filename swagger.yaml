swagger: '2.0'
host: sinopia.edu/
basePath: resources/
schemes:
  - http
info:
  description: Sinopia Server. Supports CRUD, following loosely LDP, on Sinopia resources. Top level requires special authorization for creating a group's graph (i.e. PCC, Stanford, etc.).
  version: 0.0.1
  title: Sinopia Server
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
securityDefinitions:
  RemoteUser:
    type: apiKey
    in: header
    name: On-Behalf-Of
paths:
  '/{group}':
    get:
      summary: Query for Group information
      description: 'Given an Agent, a top level action, and an optional context, (e.g. "create", "update"), is the user permitted to carry out this function'
      operationId: groupQueryAction
      security:
        - RemoteUser: []
      parameters:
        - name: Group
          description: The group who is defining it's own resources or graph within Sinopia.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: RDF description (default as JSON-LD) of the Group.
          schema:
            $ref: '#/definitions/QueryResponse'
        '404':
          description: Unable to find the specified Group.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /healthcheck:
    get:
      summary: Health Check
      description: The healthcheck endpoint provides information about the health of the service.
      operationId: healthCheck
      responses:
        '200':
          description: The service is functioning nominally
          schema:
            $ref: '#/definitions/HealthCheckResponse'
        '503':
          description: The service is not working correctly
          schema:
            $ref: '#/definitions/HealthCheckResponse'
definitions:
  HealthCheckResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the service
    example:
      status: OK
  ErrorResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
  Error:
    type: object
    properties:
      title:
        type: string
        description: 'a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem.'
        example: Invalid Attribute
      detail:
        type: string
        description: a human-readable explanation specific to this occurrence of the problem.
        example: Title must contain at least three characters.
      source:
        type: object
        properties:
          pointer:
            type: string
            example: /data/attributes/title
