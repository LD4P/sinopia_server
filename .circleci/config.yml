defaults: &defaults
  machine: true
  working_directory: ~/sinopia_server

version: 2
jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{ checksum "sinopia_client/package.json" }}
      - run: cd sinopia_client && npm install
      - save_cache:
          key: node_modules-{{ checksum "sinopia_client/package.json" }}
          paths:
            - sinopia_client/node_modules
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{ checksum "sinopia_client/package.json" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: bring up trellis-ext-db, wait for it to start, run sinopia client integration tests
          command: |
            docker-compose up -d
            dockerize -wait http://localhost:8081/healthcheck -timeout 1m
            cd sinopia_client
            npm run test
  register_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Build & push docker image
          # NOTE: the env variables holding docker credentials are stored in the CircleCI dashboard
          command: |
            git diff --name-only HEAD^ | grep -E '(Dockerfile|trellis)' || exit 0
            docker build -f Dockerfile.trellis-ext-db -t ld4p/trellis-ext-db:latest .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ld4p/trellis-ext-db:latest

workflows:
  version: 2
  build:
    jobs:
      - dependencies
      - test:
          requires:
            - dependencies
      - register_image:
          requires:
            - test
          filters:
            branches:
              only:
                - master
